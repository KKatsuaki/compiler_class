Terminals unused in grammar

    NL


Grammar

    0 $accept: S $end

    1 S: Ls

    2 Ls: Ls LANG
    3   | LANG

    4 LANG: PROGRAM BLOCK

    5 BLOCK: LBRACE DECPART STATEMENTS RBRACE

    6 DECPART: DECPART DECL
    7        | DECL

    8 DECL: INT IDENTS SEMI
    9     | CHAR IDENTS SEMI

   10 IDENTS: IDENT
   11       | IDENTS COLON IDENT

   12 STATEMENTS: STATEMENTS STATEMENT
   13           | STATEMENT

   14 STATEMENT: IDENT EQ E SEMI
   15          | WRITE E SEMI
   16          | BLOCK

   17 E: E ADD T
   18  | E SUB T
   19  | T

   20 T: T MUL F
   21  | T DIV F
   22  | T MOD F
   23  | F

   24 F: NUM
   25  | LP E RP
   26  | IDENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ADD (258) 17
    SUB (259) 18
    MUL (260) 20
    DIV (261) 21
    NUM (262) 24
    NL (263)
    MOD (264) 22
    LP (265) 25
    RP (266) 25
    PROGRAM (267) 4
    RBRACE (268) 5
    LBRACE (269) 5
    IDENT (270) 10 11 14 26
    SEMI (271) 8 9 14 15
    EQ (272) 14
    WRITE (273) 15
    INT (274) 8
    CHAR (275) 9
    COLON (276) 11


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    S (23)
        on left: 1
        on right: 0
    Ls (24)
        on left: 2 3
        on right: 1 2
    LANG (25)
        on left: 4
        on right: 2 3
    BLOCK (26)
        on left: 5
        on right: 4 16
    DECPART (27)
        on left: 6 7
        on right: 5 6
    DECL (28)
        on left: 8 9
        on right: 6 7
    IDENTS (29)
        on left: 10 11
        on right: 8 9 11
    STATEMENTS (30)
        on left: 12 13
        on right: 5 12
    STATEMENT (31)
        on left: 14 15 16
        on right: 12 13
    E (32)
        on left: 17 18 19
        on right: 14 15 17 18 25
    T (33)
        on left: 20 21 22 23
        on right: 17 18 19 20 21 22
    F (34)
        on left: 24 25 26
        on right: 20 21 22 23


State 0

    0 $accept: . S $end

    PROGRAM  shift, and go to state 1

    S     go to state 2
    Ls    go to state 3
    LANG  go to state 4


State 1

    4 LANG: PROGRAM . BLOCK

    LBRACE  shift, and go to state 5

    BLOCK  go to state 6


State 2

    0 $accept: S . $end

    $end  shift, and go to state 7


State 3

    1 S: Ls .
    2 Ls: Ls . LANG

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 1 (S)

    LANG  go to state 8


State 4

    3 Ls: LANG .

    $default  reduce using rule 3 (Ls)


State 5

    5 BLOCK: LBRACE . DECPART STATEMENTS RBRACE

    INT   shift, and go to state 9
    CHAR  shift, and go to state 10

    DECPART  go to state 11
    DECL     go to state 12


State 6

    4 LANG: PROGRAM BLOCK .

    $default  reduce using rule 4 (LANG)


State 7

    0 $accept: S $end .

    $default  accept


State 8

    2 Ls: Ls LANG .

    $default  reduce using rule 2 (Ls)


State 9

    8 DECL: INT . IDENTS SEMI

    IDENT  shift, and go to state 13

    IDENTS  go to state 14


State 10

    9 DECL: CHAR . IDENTS SEMI

    IDENT  shift, and go to state 13

    IDENTS  go to state 15


State 11

    5 BLOCK: LBRACE DECPART . STATEMENTS RBRACE
    6 DECPART: DECPART . DECL

    LBRACE  shift, and go to state 5
    IDENT   shift, and go to state 16
    WRITE   shift, and go to state 17
    INT     shift, and go to state 9
    CHAR    shift, and go to state 10

    BLOCK       go to state 18
    DECL        go to state 19
    STATEMENTS  go to state 20
    STATEMENT   go to state 21


State 12

    7 DECPART: DECL .

    $default  reduce using rule 7 (DECPART)


State 13

   10 IDENTS: IDENT .

    $default  reduce using rule 10 (IDENTS)


State 14

    8 DECL: INT IDENTS . SEMI
   11 IDENTS: IDENTS . COLON IDENT

    SEMI   shift, and go to state 22
    COLON  shift, and go to state 23


State 15

    9 DECL: CHAR IDENTS . SEMI
   11 IDENTS: IDENTS . COLON IDENT

    SEMI   shift, and go to state 24
    COLON  shift, and go to state 23


State 16

   14 STATEMENT: IDENT . EQ E SEMI

    EQ  shift, and go to state 25


State 17

   15 STATEMENT: WRITE . E SEMI

    NUM    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 28

    E  go to state 29
    T  go to state 30
    F  go to state 31


State 18

   16 STATEMENT: BLOCK .

    $default  reduce using rule 16 (STATEMENT)


State 19

    6 DECPART: DECPART DECL .

    $default  reduce using rule 6 (DECPART)


State 20

    5 BLOCK: LBRACE DECPART STATEMENTS . RBRACE
   12 STATEMENTS: STATEMENTS . STATEMENT

    RBRACE  shift, and go to state 32
    LBRACE  shift, and go to state 5
    IDENT   shift, and go to state 16
    WRITE   shift, and go to state 17

    BLOCK      go to state 18
    STATEMENT  go to state 33


State 21

   13 STATEMENTS: STATEMENT .

    $default  reduce using rule 13 (STATEMENTS)


State 22

    8 DECL: INT IDENTS SEMI .

    $default  reduce using rule 8 (DECL)


State 23

   11 IDENTS: IDENTS COLON . IDENT

    IDENT  shift, and go to state 34


State 24

    9 DECL: CHAR IDENTS SEMI .

    $default  reduce using rule 9 (DECL)


State 25

   14 STATEMENT: IDENT EQ . E SEMI

    NUM    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 28

    E  go to state 35
    T  go to state 30
    F  go to state 31


State 26

   24 F: NUM .

    $default  reduce using rule 24 (F)


State 27

   25 F: LP . E RP

    NUM    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 28

    E  go to state 36
    T  go to state 30
    F  go to state 31


State 28

   26 F: IDENT .

    $default  reduce using rule 26 (F)


State 29

   15 STATEMENT: WRITE E . SEMI
   17 E: E . ADD T
   18  | E . SUB T

    ADD   shift, and go to state 37
    SUB   shift, and go to state 38
    SEMI  shift, and go to state 39


State 30

   19 E: T .
   20 T: T . MUL F
   21  | T . DIV F
   22  | T . MOD F

    MUL  shift, and go to state 40
    DIV  shift, and go to state 41
    MOD  shift, and go to state 42

    $default  reduce using rule 19 (E)


State 31

   23 T: F .

    $default  reduce using rule 23 (T)


State 32

    5 BLOCK: LBRACE DECPART STATEMENTS RBRACE .

    $default  reduce using rule 5 (BLOCK)


State 33

   12 STATEMENTS: STATEMENTS STATEMENT .

    $default  reduce using rule 12 (STATEMENTS)


State 34

   11 IDENTS: IDENTS COLON IDENT .

    $default  reduce using rule 11 (IDENTS)


State 35

   14 STATEMENT: IDENT EQ E . SEMI
   17 E: E . ADD T
   18  | E . SUB T

    ADD   shift, and go to state 37
    SUB   shift, and go to state 38
    SEMI  shift, and go to state 43


State 36

   17 E: E . ADD T
   18  | E . SUB T
   25 F: LP E . RP

    ADD  shift, and go to state 37
    SUB  shift, and go to state 38
    RP   shift, and go to state 44


State 37

   17 E: E ADD . T

    NUM    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 28

    T  go to state 45
    F  go to state 31


State 38

   18 E: E SUB . T

    NUM    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 28

    T  go to state 46
    F  go to state 31


State 39

   15 STATEMENT: WRITE E SEMI .

    $default  reduce using rule 15 (STATEMENT)


State 40

   20 T: T MUL . F

    NUM    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 28

    F  go to state 47


State 41

   21 T: T DIV . F

    NUM    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 28

    F  go to state 48


State 42

   22 T: T MOD . F

    NUM    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 28

    F  go to state 49


State 43

   14 STATEMENT: IDENT EQ E SEMI .

    $default  reduce using rule 14 (STATEMENT)


State 44

   25 F: LP E RP .

    $default  reduce using rule 25 (F)


State 45

   17 E: E ADD T .
   20 T: T . MUL F
   21  | T . DIV F
   22  | T . MOD F

    MUL  shift, and go to state 40
    DIV  shift, and go to state 41
    MOD  shift, and go to state 42

    $default  reduce using rule 17 (E)


State 46

   18 E: E SUB T .
   20 T: T . MUL F
   21  | T . DIV F
   22  | T . MOD F

    MUL  shift, and go to state 40
    DIV  shift, and go to state 41
    MOD  shift, and go to state 42

    $default  reduce using rule 18 (E)


State 47

   20 T: T MUL F .

    $default  reduce using rule 20 (T)


State 48

   21 T: T DIV F .

    $default  reduce using rule 21 (T)


State 49

   22 T: T MOD F .

    $default  reduce using rule 22 (T)
